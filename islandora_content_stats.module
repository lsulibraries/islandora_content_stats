<?php

/**
 * Implements hook_menu().
 */
function islandora_content_stats_menu() {
    $items = array();
    $items['admin/islandora/tools/content_stats'] = array(
        'title' => 'Content Statistics',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('islandora_content_stats_admin_form', 1),
        'access arguments' => array('administer site configuration'),
        'file' => 'includes/admin.form.inc',
    );
    $items['data'] = array(
        'title' => 'Content Statistics',
        'page callback' => 'islandora_content_stats_data',
        'page arguments' => array('islandora_content_stats_form'),
        'file' => 'includes/data.form.inc',
        'access callback' => TRUE,
    );
    $items['data/download'] = array(
        'title' => 'Content Statistics',
        'page callback' => 'islandora_content_stats_csv_download',
        'file' => 'includes/data.form.inc',
        'access callback' => TRUE,
    );
    return $items;
}

function islandora_content_stats_data() {
    return theme('islandora_content_stats_data_tpl');
}

function islandora_content_stats_theme() {
    module_load_include('inc','islandora_content_stats','includes/language');
    module_load_include('inc','islandora_content_stats','includes/utilities');
    module_load_include('inc','islandora_content_stats','includes/queries');
    module_load_include('inc','islandora_content_stats','includes/data.form');
    $params =  islandora_content_stats_get_query_params();
    return array(
        'islandora_content_stats_data_tpl' => array(
            'template' => 'theme/data',
            'render element' => 'form',
            'variables' => array(
                'global_totals' => global_totals(),
                'inst_totals' => inst_totals(),
                'lang' => array(
                  'pageHeader' => stats_lang('pageHeader'),
                  'pageDesc' => stats_lang('pageDesc'),
                  'lastRun' => gmdate("M d Y H:i:s", latest_run()),
                  'globalHeader' => stats_lang('globalHeader'),
                  'globalDesc' => stats_lang('globalDesc'),
                  'instHeader' => stats_lang('instHeader'),
                  'instDesc' => stats_lang('instDesc'),
                  //filters and dl go into form, not tpl
                  //comments kept for mneumonic reasons
                  //'filtersGrouping' => stats_lang('filtersGrouping'),
                  //'filterCmodel_desc' => stats_lang('filterCmodel_desc'),
                  'tableDesc' => stats_lang('tableDesc'),
                  'tableTitle' => stats_lang('tableTitle'),
                  'tableEmpty' => stats_lang('tableEmpty'),
                  //'lang_dl_submit' => stats_lang('downloadSubmitDesc'),
                  //'lang_dl_title' => stats_lang('downloadSubmit'),
                ),
                'params' => $params,
            ),
        ),
    );
}

/**
 * 
 * @return array containing the string keys of the page params in use.
 */
function getPageParams() {
  return ['sort', 'order', 'cmodel', 'inst'];
}

/**
 * @return keyed array with values for sorting and filters
 */
function islandora_content_stats_get_query_params() {
  $pageParams = array_fill_keys(getPageParams(), FALSE);
  $getParams = drupal_get_query_parameters();
  // Check that incoming values are ones we expect.
  foreach (array_keys($pageParams) as $param) {
    if (array_key_exists($param, $getParams)) {
      validValuesPassthru($param, $getParams[$param]);
      $pageParams[$param] = $getParams[$param];
    }
  }
  return $pageParams;
}

/**
 * 
 * @param array $pageParams as returned from
 *   islandora_content_stats_get_query_params().
 * @return array The input [] with default values set.
 */
function pageDefaultParams($pageParams) {
  if (!$pageParams['sort']) {
    $pageParams['sort'] = 'inst';
  }
  if (!$pageParams['order']) {
    $pageParams['order'] = 'asc';
  }
  if ($pageParams['cmodel'] && $pageParams['sort'] == 'cmodel') {
    $pageParams['sort'] = 'inst';
  }
  if ($pageParams['inst'] && $pageParams['sort'] == 'inst') {
    $pageParams['sort'] = 'cmodel';
  }
  return $pageParams;
}

/**
 * 
 * @param string $column table column name
 * @return array of query params suitable for url().
 */
function columnSortLinkParams($column) {
  $pageParams = pageDefaultParams(islandora_content_stats_get_query_params());
  validValuesPassthru('sort', $column);
  if ($pageParams['sort'] == $column) {
    $pageParams['order'] = $pageParams['order'] == 'asc' ? 'desc' : 'asc';
  }
  else {
    $pageParams['sort'] = $column;
  }
  return array_filter($pageParams);
}

/**
 * Checks get params related to sorts and filters.
 * 
 * @param String $key the name of the param.
 * @param String $value param's value.
 * @throws Exception for invalid param names ($key) 
 *   or for invalid values.
 */
function validValuesPassthru($key, $value) {
  switch ($key) {
    case 'sort':
      $valid = ['inst', 'cmodel', 'count'];
      break;
    case 'order': 
      $valid = ['desc', 'asc'];
      break;
    case 'cmodel':
      module_load_include('inc', 'islandora', 'includes/utilities');
      $valid = array_keys(islandora_content_stats_islandora_get_content_models());
      break;
    case 'inst':
      module_load_include('inc', 'islandora_content_stats', 'includes/queries');
      $valid = get_all_prefixes();
      break;
    default:
      throw new Exception(sprintf("Invalid parameter; one of [%s] expected; got [%s]", implode('|', ['sort','order','cmodel','inst']), $value));
  }
  $valid[] = NULL;
  if (!in_array($value, $valid)) {
    throw new Exception(sprintf("Invalid value for parameter %s; one of [%s] expected; got [%s]", $key, implode('|', $valid), $value));
  }
}

function islandora_content_stats_islandora_get_content_models() {

  $cmodels = &drupal_static(__FUNCTION__);
  if (!isset($cmodels)) {
    if ($cache = cache_get('islandora_content_stats_cmodels')) {
      $cmodels = $cache->data;
    }
    else {
      module_load_include('inc', 'islandora', 'includes/utilities');
      $cmodels = islandora_get_content_models();
      cache_set('islandora_content_stats_cmodels', $cmodels, 'cache');
    }
  }
  return $cmodels;

}

/**
 * hook_preprocess
 * 
 * @param type $variables
 */
function template_preprocess_islandora_content_stats_data_tpl(&$variables) {
  module_load_include('inc','islandora_content_stats','includes/utilities');
  $pageParams = pageDefaultParams(islandora_content_stats_get_query_params());

  $variables['latest'] = latest_counts_for_table($pageParams);
  $variables['insturl'] = url('data',array('query' => columnSortLinkParams('inst')));
  $variables['typeurl'] = url('data',array('query' => columnSortLinkParams('cmodel')));
  $variables['counturl'] = url('data',array('query' => columnSortLinkParams('count')));

  // setup vars for download
  module_load_include('inc', 'islandora_content_stats', 'includes/language');
  $variables['dlSubmitDesc'] = stats_lang('dlSubmitDesc');
  $variables['dlSubmit'] = stats_lang('dlSubmit');
  $variables['downloadurl'] = url('data/download', array('query' => columnSortLinkParams('inst')));
}

/**
 * Implements hook_cron().
 * must stay in .module file
 */
function islandora_content_stats_cron() {
    module_load_include('inc', 'islandora_content_stats', 'includes/queries');
    $time = time();
    $is_off_hours = is_off_hours($time);
    $days = 86400 * variable_get('islandora_content_stats_interval');
    $last_run = db_query('select max(timestamp) from {islandora_content_stats}');
    $last_run_time = $last_run->fetchField();
    $elapsed = $time - $last_run_time;
    if ($elapsed > $days && $is_off_hours) {
        islandora_content_stats_run_queries();
    }
}

function is_off_hours($time) {
    $check = strftime('%H', $time);
    $start = variable_get('islandora_content_stats_off_start', 20);
    $end = variable_get('islandora_content_stats_off_end', 23);
    if ($start > $end) {
        $range1 = range($start, 23);
        $range2 = range(0, $end);
        $range = array_merge($range1, $range2);
    } else {
        $range = range($start, $end);
    }
    if (in_array($check, $range)) {
        return TRUE;
    }
}
